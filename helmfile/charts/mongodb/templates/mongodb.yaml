---
# Source: mongodb/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mongodb
  labels:
    app: mongodb
    chart: mongodb-7.8.10
    release: "mongodb"
    heritage: "Helm"
type: Opaque
data:
  mongodb-root-password:  "YWRtaW5AMTIz"
  mongodb-password:  "YWRtaW4xMjM0"
---
# storage class for gp3
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: gp3-sc
parameters:
  fsType: ext4
  type: gp3
#provisioner: kubernetes.io/aws-ebs
provisioner: ebs.csi.aws.com
reclaimPolicy: Delete
volumeBindingMode: WaitForFirstConsumer
---
# Source: mongodb/templates/pvc-standalone.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  labels:
    app: mongodb
    chart: mongodb-7.8.10
    heritage: Helm
    release: mongodb
  name: mongodb
spec:
  storageClassName: "gp3-sc"
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
---
# Source: mongodb/templates/svc-standalone.yaml
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  labels:
    app: mongodb
    chart: mongodb-7.8.10
    release: "mongodb"
    heritage: "Helm"
spec:
  type: ClusterIP
  ports:
  - name: mongodb
    port: 27017
    targetPort: mongodb
  selector:
    app: mongodb
    release: "mongodb"
---
# Source: mongodb/templates/deployment-standalone.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  labels:
    app: mongodb
    chart: mongodb-7.8.10
    release: "mongodb"
    heritage: "Helm"
spec:
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: mongodb
      release: "mongodb"
  template:
    metadata:
      labels:
        app: mongodb
        release: "mongodb"
        chart: mongodb-7.8.10
    spec:
      securityContext:
        fsGroup: 1001
      initContainers:
      containers:
      - name: mongodb
        image: docker.io/bitnami/mongodb:4.4.1
        imagePullPolicy: "IfNotPresent"
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
        env:
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb
              key: mongodb-password
        - name: MONGODB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb
              key: mongodb-root-password
        - name: MONGODB_USERNAME
          value: "admin"
        - name: MONGODB_SYSTEM_LOG_VERBOSITY
          value: "0"
        - name: MONGODB_DISABLE_SYSTEM_LOG
          value: "no"
        - name: MONGODB_DATABASE
          value: "demo"
        - name: MONGODB_ENABLE_IPV6
          value: "no"
        - name: MONGODB_ENABLE_DIRECTORY_PER_DB
          value: "no"
        ports:
        - name: mongodb
          containerPort: 27017
        livenessProbe:
          exec:
            command:
            - mongo
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - mongo
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        volumeMounts:
        - name: data
          mountPath: /bitnami/mongodb
          subPath:
        resources:
          {}
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: mongodb